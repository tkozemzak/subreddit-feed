{"version":3,"sources":["components/Article.js","App.js","reportWebVitals.js","index.js"],"names":["Article","props","href","article","permalink","target","title","App","useState","articles","setArticles","subreddit","setSubreddit","useEffect","fetch","then","res","status","json","data","console","log","children","className","type","value","onChange","e","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAYeA,MAVf,SAAiBC,GACb,OACI,kCACI,mBAAGC,KAAI,gCAA4BD,EAAME,QAAQC,WAAaC,OAAO,QAArE,SACI,6BAAKJ,EAAME,QAAQG,aCmCpBC,MArCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEqBF,mBAAS,UAF9B,mBAENG,EAFM,KAEKC,EAFL,KAsBb,OAlBAC,qBAAU,WAERC,MAAM,4BAAD,OAA6BH,EAA7B,UAA+CI,MAAK,SAAAC,GACrC,KAAdA,EAAIC,OAKRD,EAAIE,OAAOH,MAAK,SAAAI,GACF,MAARA,IACFC,QAAQC,IAAI,qBAAsBF,EAAKA,KAAKG,UAC5CZ,EAAYS,EAAKA,KAAKG,UACtBF,QAAQC,IAAI,YAAaZ,OAR3BW,QAAQC,IAAI,cAYf,CAACV,IAGF,sBAAKY,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,uBAAOC,KAAK,OAAOD,UAAW,QAAQE,MAAOd,EAAWe,SAAU,SAAAC,GAAC,OAAIf,EAAae,EAAEtB,OAAOoB,YAE7F,qBAAKF,UAAU,WAAf,SAEKd,GAAY,GAAMA,EAASmB,KAAI,SAACzB,EAAS0B,GAAV,OAAoB,cAAC,EAAD,CAAqB1B,QAASA,EAAQgB,MAAxBU,MAAoC,SCrBnGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a525691c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Article(props) {\n    return (\n        <article>\n            <a href={ `https://www.reddit.com${props.article.permalink}`} target=\"blank\">\n                <h3>{props.article.title}</h3>\n            </a>\n        </article>\n    )\n}\n\nexport default Article;\n\n","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Article from './components/Article';\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n  const [subreddit, setSubreddit] = useState(\"webdev\");\n\n  useEffect(() => {\n\n    fetch(`https://www.reddit.com/r/${subreddit}.json`).then(res => {\n      if (res.status != 200){\n        console.log(\"ERROR\");\n        return;\n      }\n\n      res.json().then(data => {\n        if (data != null) {\n          console.log(\"data.data.children\", data.data.children);\n          setArticles(data.data.children);\n          console.log(\"articles:\", articles);\n        }\n      })\n    })\n  }, [subreddit])\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"text\" className =\"input\" value={subreddit} onChange={e => setSubreddit(e.target.value)}/>\n        </header>\n        <div className=\"articles\">\n          {\n            (articles != []) ? articles.map((article, index) => <Article key={index} article={article.data} />) : ''\n          }\n        </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}